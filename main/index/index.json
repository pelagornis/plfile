{"interfaceLanguages":{"swift":[{"children":[{"title":"Essentials","type":"groupMarker"},{"path":"\/documentation\/file\/gettingstarted","title":"Getting started","type":"article"},{"title":"Classes","type":"groupMarker"},{"path":"\/documentation\/file\/store","title":"Store","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/file\/filesystem\/init(path:)","title":"init(path: Path) throws","type":"init"},{"path":"\/documentation\/file\/filesystem\/init(store:)","title":"init(store: Store<Self>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/file\/filesystem\/creationdate","title":"var creationDate: Date?","type":"property"},{"path":"\/documentation\/file\/filesystem\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/file\/filesystem\/extension","title":"var `extension`: String?","type":"property"},{"path":"\/documentation\/file\/filesystem\/modificationdate","title":"var modificationDate: Date?","type":"property"},{"path":"\/documentation\/file\/filesystem\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/file\/filesystem\/store","title":"var store: Store<Self>","type":"property"},{"path":"\/documentation\/file\/filesystem\/url","title":"var url: URL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/file\/filesystem\/copy(to:)","title":"func copy(to: Folder) throws -> Self","type":"method"},{"path":"\/documentation\/file\/filesystem\/delete()","title":"func delete() throws","type":"method"},{"path":"\/documentation\/file\/filesystem\/managedby(_:)","title":"func managedBy(FileManager) throws -> Self","type":"method"},{"path":"\/documentation\/file\/filesystem\/move(to:)","title":"func move(to: Folder) throws","type":"method"},{"path":"\/documentation\/file\/filesystem\/rename(to:keepextensions:)","title":"func rename(to: String, keepExtensions: Bool) throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/file\/filesystem\/type","title":"static var type: FileType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/file\/filesystem\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/file\/filesystem\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/file\/filesystem","title":"FileSystem","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/file\/file\/init(store:)","title":"init(store: Store<File>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/file\/file\/store","title":"var store: Store<File>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/file\/file\/append(_:)","title":"func append(Data) throws","type":"method"},{"path":"\/documentation\/file\/file\/append(_:encoding:)","title":"func append(String, encoding: String.Encoding) throws","type":"method"},{"path":"\/documentation\/file\/file\/open()","title":"func open()","type":"method"},{"path":"\/documentation\/file\/file\/read()","title":"func read() throws -> Data","type":"method"},{"path":"\/documentation\/file\/file\/write(_:)","title":"func write(Data) throws","type":"method"},{"path":"\/documentation\/file\/file\/write(_:encoding:)","title":"func write(String, encoding: String.Encoding) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/file\/file\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/file\/file\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/file\/file\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/file\/file\/init(path:)","title":"init(path: Path) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/file\/file\/creationdate","title":"var creationDate: Date?","type":"property"},{"path":"\/documentation\/file\/file\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/file\/file\/extension","title":"var `extension`: String?","type":"property"},{"path":"\/documentation\/file\/file\/modificationdate","title":"var modificationDate: Date?","type":"property"},{"path":"\/documentation\/file\/file\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/file\/file\/url","title":"var url: URL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/file\/file\/copy(to:)","title":"func copy(to: Folder) throws -> Self","type":"method"},{"path":"\/documentation\/file\/file\/delete()","title":"func delete() throws","type":"method"},{"path":"\/documentation\/file\/file\/managedby(_:)","title":"func managedBy(FileManager) throws -> Self","type":"method"},{"path":"\/documentation\/file\/file\/move(to:)","title":"func move(to: Folder) throws","type":"method"},{"path":"\/documentation\/file\/file\/rename(to:keepextensions:)","title":"func rename(to: String, keepExtensions: Bool) throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/file\/file\/type","title":"static var type: FileType","type":"property"}],"path":"\/documentation\/file\/file\/filesystem-implementations","title":"FileSystem Implementations","type":"symbol"}],"path":"\/documentation\/file\/file","title":"File","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/file\/folder\/childiterator\/next()","title":"func next() -> Child?","type":"method"}],"path":"\/documentation\/file\/folder\/childiterator\/iteratorprotocol-implementations","title":"IteratorProtocol Implementations","type":"symbol"}],"path":"\/documentation\/file\/folder\/childiterator","title":"Folder.ChildIterator","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/file\/folder\/childsequence\/includingstatus","title":"var includingStatus: Folder.ChildSequence<Child>","type":"property"},{"path":"\/documentation\/file\/folder\/childsequence\/recursivestatus","title":"var recursiveStatus: Folder.ChildSequence<Child>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/file\/folder\/childsequence\/delete()","title":"func delete() throws","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/move(to:)","title":"func move(to: Folder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/file\/folder\/childsequence\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/file\/folder\/childsequence\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/file\/folder\/childsequence\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/file\/folder\/childsequence\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/file\/folder\/childsequence\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/file\/folder\/childsequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/clip()","title":"func clip()","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/fill(using:)-3qcey","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/fill(using:)-52sjj","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/fill(using:)-7as4r","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/filter(_:)-8k1dc","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/filter(_:)-9anrs","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/flatmap(_:)-5sx48","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/flatmap(_:)-8ye03","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/joined(separator:)-51jiq","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/joined(separator:)-7bum","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/makeiterator()","title":"func makeIterator() -> Folder.ChildIterator<Child>","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/map(_:)","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/sorted(using:)-2hl3q","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/sorted(using:)-811kh","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/file\/folder\/childsequence\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/file\/folder\/childsequence\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/file\/folder\/childsequence","title":"Folder.ChildSequence","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/file\/folder\/init(store:)","title":"init(store: Store<Folder>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/file\/folder\/store","title":"var store: Store<Folder>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/file\/folder\/createfile(at:contents:)","title":"func createFile(at: Path, contents: Data?) throws -> File","type":"method"},{"path":"\/documentation\/file\/folder\/createfileifneeded(at:contents:)","title":"func createFileIfNeeded(at: Path, contents: Data?) throws -> File","type":"method"},{"path":"\/documentation\/file\/folder\/createsubfolder(at:)","title":"func createSubfolder(at: Path) throws -> Folder","type":"method"},{"path":"\/documentation\/file\/folder\/createsubfolderifneeded(at:)","title":"func createSubfolderIfNeeded(at: Path) throws -> Folder","type":"method"},{"path":"\/documentation\/file\/folder\/empty(includingstatus:)","title":"func empty(includingStatus: Bool) throws","type":"method"},{"path":"\/documentation\/file\/folder\/file(at:)","title":"func file(at: Path) throws -> File","type":"method"},{"path":"\/documentation\/file\/folder\/movecontents(to:includestatus:)","title":"func moveContents(to: Folder, includeStatus: Bool) throws","type":"method"},{"path":"\/documentation\/file\/folder\/subfolder(at:)","title":"func subfolder(at: Path) throws -> Folder","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/file\/folder\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/file\/folder\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/file\/folder\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/file\/folder\/init(path:)","title":"init(path: Path) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/file\/folder\/creationdate","title":"var creationDate: Date?","type":"property"},{"path":"\/documentation\/file\/folder\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/file\/folder\/extension","title":"var `extension`: String?","type":"property"},{"path":"\/documentation\/file\/folder\/modificationdate","title":"var modificationDate: Date?","type":"property"},{"path":"\/documentation\/file\/folder\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/file\/folder\/url","title":"var url: URL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/file\/folder\/copy(to:)","title":"func copy(to: Folder) throws -> Self","type":"method"},{"path":"\/documentation\/file\/folder\/delete()","title":"func delete() throws","type":"method"},{"path":"\/documentation\/file\/folder\/managedby(_:)","title":"func managedBy(FileManager) throws -> Self","type":"method"},{"path":"\/documentation\/file\/folder\/move(to:)","title":"func move(to: Folder) throws","type":"method"},{"path":"\/documentation\/file\/folder\/rename(to:keepextensions:)","title":"func rename(to: String, keepExtensions: Bool) throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/file\/folder\/type","title":"static var type: FileType","type":"property"}],"path":"\/documentation\/file\/folder\/filesystem-implementations","title":"FileSystem Implementations","type":"symbol"}],"path":"\/documentation\/file\/folder","title":"Folder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/file\/path\/init()","title":"init()","type":"init"},{"path":"\/documentation\/file\/path\/init(_:expandingtilde:_:)","title":"init(String, expandingTilde: Bool, FileManager)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/file\/path\/absolutepath","title":"var absolutePath: Path","type":"property"},{"path":"\/documentation\/file\/path\/parents","title":"var parents: Path","type":"property"},{"path":"\/documentation\/file\/path\/pathcomponent","title":"var pathComponent: [Path]","type":"property"},{"path":"\/documentation\/file\/path\/rawvalue","title":"var rawValue: String","type":"property"},{"path":"\/documentation\/file\/path\/resolved","title":"var resolved: Path","type":"property"},{"path":"\/documentation\/file\/path\/standardrawvalue","title":"var standardRawValue: String","type":"property"},{"path":"\/documentation\/file\/path\/standardized","title":"var standardized: Path","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/file\/path\/subscript(_:)-6y67b","title":"subscript(Range<Int>) -> Path","type":"subscript"},{"path":"\/documentation\/file\/path\/subscript(_:)-dkws","title":"subscript(Int) -> Path","type":"subscript"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/file\/path\/current","title":"static var current: Path","type":"property"},{"path":"\/documentation\/file\/path\/documents","title":"static var documents: Path","type":"property"},{"path":"\/documentation\/file\/path\/home","title":"static var home: Path","type":"property"},{"path":"\/documentation\/file\/path\/library","title":"static var library: Path","type":"property"},{"path":"\/documentation\/file\/path\/root","title":"static let root: Path","type":"property"},{"path":"\/documentation\/file\/path\/temporary","title":"static var temporary: Path","type":"property"},{"path":"\/documentation\/file\/path\/usertemporary","title":"static var userTemporary: Path","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/file\/path\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/file\/path\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/file\/path\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/file\/path\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/file\/path\/init(extendedgraphemeclusterliteral:)-41gw0","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"},{"path":"\/documentation\/file\/path\/init(extendedgraphemeclusterliteral:)-qrlk","title":"init(extendedGraphemeClusterLiteral: String)","type":"init"}],"path":"\/documentation\/file\/path\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/file\/path\/init(stringliteral:)","title":"init(stringLiteral: StringLiteralType)","type":"init"}],"path":"\/documentation\/file\/path\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/file\/path\/init(unicodescalarliteral:)-103bm","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"},{"path":"\/documentation\/file\/path\/init(unicodescalarliteral:)-3kvm3","title":"init(unicodeScalarLiteral: String)","type":"init"}],"path":"\/documentation\/file\/path\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/file\/path\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/file\/path\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/file\/path\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/file\/path\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/file\/path\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/file\/path","title":"Path","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/file\/fileerror\/cannotrename(path:)","title":"case cannotRename(path: Path)","type":"case"},{"path":"\/documentation\/file\/fileerror\/copyerror(path:error:)","title":"case copyError(path: Path, error: any Error)","type":"case"},{"path":"\/documentation\/file\/fileerror\/deleteerror(path:error:)","title":"case deleteError(path: Path, error: any Error)","type":"case"},{"path":"\/documentation\/file\/fileerror\/emptypath(path:)","title":"case emptyPath(path: Path)","type":"case"},{"path":"\/documentation\/file\/fileerror\/filecreateerror(path:)","title":"case fileCreateError(path: Path)","type":"case"},{"path":"\/documentation\/file\/fileerror\/filepathempty(path:)","title":"case filePathEmpty(path: Path)","type":"case"},{"path":"\/documentation\/file\/fileerror\/foldercreateerror(path:error:)","title":"case folderCreateError(path: Path, error: any Error)","type":"case"},{"path":"\/documentation\/file\/fileerror\/missing(path:)","title":"case missing(path: Path)","type":"case"},{"path":"\/documentation\/file\/fileerror\/moveerror(path:error:)","title":"case moveError(path: Path, error: any Error)","type":"case"},{"path":"\/documentation\/file\/fileerror\/readfailed(path:error:)","title":"case readFailed(path: Path, error: any Error)","type":"case"},{"path":"\/documentation\/file\/fileerror\/writefailed(path:error:)","title":"case writeFailed(path: Path, error: any Error)","type":"case"},{"path":"\/documentation\/file\/fileerror\/writestringencodingfailed(path:)","title":"case writeStringEncodingFailed(path: Path)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/file\/fileerror\/error","title":"var error: (any Error)?","type":"property"},{"path":"\/documentation\/file\/fileerror\/message","title":"var message: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/file\/fileerror\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/file\/fileerror\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/file\/fileerror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/file\/fileerror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/file\/fileerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/file\/fileerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/file\/fileerror","title":"FileError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/file\/filetype\/file","title":"case file","type":"case"},{"path":"\/documentation\/file\/filetype\/folder","title":"case folder","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/file\/filetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/file\/filetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/file\/filetype","title":"FileType","type":"enum"}],"path":"\/documentation\/file","title":"File","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}